buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.h2database:h2:1.4.186'
        classpath 'org.jooq:jooq-codegen:3.8.1'
    }
}

plugins {
    id 'io.ratpack.ratpack-java' version '1.4.5'
}

repositories {
    jcenter()
}

dependencies {
    runtime 'ch.qos.logback:logback-classic:1.1.7'

    compile ratpack.dependency('handlebars')
    compile ratpack.dependency('hikari')
    compile 'com.h2database:h2:1.4.186'
    compile 'org.jooq:jooq:3.8.1'

    testCompile ratpack.dependency('groovy-test')
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4', {
        exclude module: 'groovy-all'
    }
}

mainClassName = 'App'

import org.jooq.util.jaxb.*
import org.jooq.util.*

task jooqCodegen {
    doLast {
        String init = "$projectDir/src/main/resources/init.sql".replaceAll('\\\\', '/')
        Configuration configuration = new Configuration()
                .withJdbc(new Jdbc()
                .withDriver("org.h2.Driver")
                .withUrl("jdbc:h2:mem:todo;INIT=RUNSCRIPT FROM '$init'")
        )
                .withGenerator(new Generator()
                .withDatabase(new Database()
                .withName("org.jooq.util.h2.H2Database")
                .withIncludes(".*")
                .withExcludes("")
                .withInputSchema("PUBLIC")
        )
                .withTarget(new Target()
                .withDirectory("$projectDir/src/main/java")
                .withPackageName("jooq")))
        GenerationTool.generate(configuration)
    }
}